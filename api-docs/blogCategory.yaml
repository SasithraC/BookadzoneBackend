paths:
  /blogCategory:
    get:
      summary: Get all BlogCategories
      tags:
        - BlogCategories
      security:
        - bearerAuth: []  
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
        - in: query
          name: status
          schema:
            type: string
            enum: [active, inactive]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/blogCategory'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                      active:
                        type: integer
                      inactive:
                        type: integer
                      totalPages:
                        type: integer
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new BlogCategory
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blogCategoryInput'
      responses:
        '201':
          description: BlogCategory created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/blogCategory'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogCategory/getblogCategoryById/{id}:
    get:
      summary: Get a BlogCategory by ID
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: BlogCategory ID
      responses:
        '200':
          description: BlogCategory found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/blogCategory'
        '400':
          description: BlogCategory id is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: BlogCategory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogCategory/updateblogCategory/{id}:
    put:
      summary: Update a BlogCategory by ID
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: BlogCategory ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blogCategoryInput'
      responses:
        '200':
          description: BlogCategory updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: BlogCategory updated
                  data:
                    $ref: '#/components/schemas/blogCategory'
        '400':
          description: BlogCategory id is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: BlogCategory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogCategory/softDeleteblogCategory/{id}:
    delete:
      summary: Soft delete a BlogCategory by ID
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: BlogCategory ID
      responses:
        '200':
          description: BlogCategory deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: BlogCategory deleted successfully
        '400':
          description: BlogCategory id is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: BlogCategory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogCategory/togglestatus/{id}:
    patch:
      summary: Toggle the status of a BlogCategory (active/inactive)
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: BlogCategory ID
      responses:
        '200':
          description: BlogCategory status toggled
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: BlogCategory status toggled
                  data:
                    $ref: '#/components/schemas/blogCategory'
        '400':
          description: BlogCategory id is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: BlogCategory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogCategory/trash:
    get:
      summary: Get all trashed BlogCategories
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: status
          schema:
            type: string
            enum: [active, inactive]
      responses:
        '200':
          description: List of trashed BlogCategories
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/blogCategory'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 1
                      active:
                        type: integer
                        example: 1
                      inactive:
                        type: integer
                        example: 0
                      totalPages:
                        type: integer
                        example: 1
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogCategory/restore/{id}:
    patch:
      summary: Restore a soft-deleted BlogCategory
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: BlogCategory ID
      responses:
        '200':
          description: BlogCategory restored successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: BlogCategory restored successfully
        '400':
          description: BlogCategory id is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: BlogCategory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogCategory/permanentDelete/{id}:
    delete:
      summary: Permanently delete a BlogCategory
      tags:
        - BlogCategories
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: BlogCategory ID
      responses:
        '200':
          description: BlogCategory permanently deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: BlogCategory permanently deleted
        '400':
          description: BlogCategory id is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: BlogCategory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    blogCategory:
      type: object
      properties:
        _id:
          type: string
          example: 68ad430b8089095867639823
        name:
          type: string
          example: Technology
        slug:
          type: string
          example: technology
        status:
          type: string
          enum:
            - active
            - inactive
          example: active
        isDeleted:
          type: boolean
          example: false
        createdAt:
          type: string
          format: date-time
          example: 2025-09-09T12:00:00Z
        updatedAt:
          type: string
          format: date-time
          example: 2025-09-09T12:00:00Z
      required:
        - name
        - slug

    blogCategoryInput:
      type: object
      properties:
        name:
          type: string
          example: Technology
        slug:
          type: string
          example: technology
        status:
          type: string
          enum:
            - active
            - inactive
          example: active
        isDeleted:
          type: boolean
          example: false
      required:
        - name
        - slug

    Error:
      type: object
      properties:
        status:
          type: string
          example: fail
        message:
          type: string
          example: Invalid input
