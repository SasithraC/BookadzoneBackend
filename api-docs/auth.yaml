# Authentication endpoints
paths:
  /auth/login:
    post:
      summary: Authenticate a user or admin
      description: Authenticate user with rate limiting (5 attempts per 15 minutes)
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: admin@gmail.com
                password:
                  type: string
                  example: admin@123
                testField:
                  type: string
                  example: test
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Logged in successfully
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 68ad430b8089095867639823
                      email:
                        type: string
                        example: bookadzone@gmail.com
                      role:
                        type: string
                        example: super-admin
                      status:
                        type: string
                        example: active
        '400':
          description: Invalid credentials or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    post:
      summary: Refresh an authentication token
      tags:
        - Authentication
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          description: Bearer token for authentication
        - in: header
          name: X-XSRF-TOKEN
          required: true
          schema:
            type: string
          description: CSRF token for request validation
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Token refreshed successfully
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 68ad430b8089095867639823
        '400':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/forgot-password:
    post:
      summary: Request a password reset
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
              required:
                - email
      responses:
        '200':
          description: Password reset email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: If a matching account was found, a password reset email has been sent
        '400':
          description: Invalid email format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many reset attempts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'

  /auth/reset-password:
    post:
      summary: Reset password using reset token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: a1b2c3d4e5f6...
                password:
                  type: string
                  format: password
                  minLength: 8
                  example: newSecurePassword123
              required:
                - token
                - password
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Password has been reset successfully
        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many attempts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'

components:
  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
          example: fail
        message:
          type: string
          example: Invalid input

    RateLimitError:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Too many requests. Please try again later.
        retryAfter:
          type: integer
          example: 900
          description: Time in seconds until the next attempt is allowed

    CSRFError:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Invalid CSRF token

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    CSRFToken:
      type: apiKey
      in: header
      name: X-XSRF-TOKEN

security:
  - BearerAuth: []
    CSRFToken: []